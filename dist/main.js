(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),A=t(645),i=t.n(A)()(r());i.push([n.id,"*{\n    padding:0;\n    margin:0;\n    font-family: 'Comfortaa', cursive;\n}\n\n\n.main{\n    display:grid;\n    grid-template: 200px 1fr 40px/ 350px 1fr;\n    height:100vh;\n    width: 100vw;\n\n}\n\n.header{\n    display:flex;\n    grid-area: 1/1/2/3;\n    background-color: rgb(243, 166, 140);\n    padding: 10px 20px;\n    font-size: 2.5rem;\n    align-items: center;\n\n}\n\n.sidebar{\n    grid-area: 2/1/3/2;\n    background-color: rgb(224, 104, 104);/*rgb(54, 41, 41)*/\n    display:flex;\n    flex-direction: column;\n    width: calc(100% - 50px);\n    height: 100%;\n    padding-left: 20px;\n    padding-top: 20px ;\n    \n}\n\n.sidebar button{\n    width:300px;\n    background-color: rgba(0, 0, 0, 0);\n    border: none;\n    height:40px;\n    margin-bottom: 15px;\n    text-align: left;\n    padding-left: 10px;\n    font-size: 2rem;\n}\n.sidebar button:hover{\n    background-color: rgb(236, 152, 152);\n    font-size: 2.3rem;\n    \n}\n\n.content{\n    grid-area: 2/2/3/3;\n    display:grid; \n    grid-template: 100px 1fr/ 1fr 1fr ;\n    padding: 30px 0px 0px 25px;\n}\n.contentTitle{\n    grid-area: 1/1/2/2;\n    font-size: 3rem;\n}\n.contentSorter{\n    grid-area: 1/2/2/3;\n    display:flex;\n    margin-left:5px;\n    width: 700px;\n    height: 50px;\n    justify-content: flex-end;\n}\n.contentSorter button{\n    height: 40px;\n    width: 60px;\n    padding:10px;\n    box-shadow: 2px 2px 2px gray;\n    border: none;\n}\n.contentSorter button:hover{\n    background-color: rgb(204, 204, 204);\n}\n.contentSorter img{\n    height: 20px;\n    width: 30px;\n}\n.taskArea{\n    grid-area: 2/1/3/3;\n    width: 1000px;\n    max-height:800px;\n    overflow-y:scroll;\n    \n}\n\n/*Today list section*/\n.toDoForm{\n    width:300px;\n    height:400px;\n    background-color: rgb(255, 117, 117);\n    padding: 10px;\n    position:absolute;\n    left:1000px;\n}\ninput{\n    border:none;\n    background-color: rgb(255, 195, 195);\n}\ntextarea{\n    background-color: rgb(255, 195, 195);\n    max-width: 300px;\n    max-height: 300px;\n}\nfieldset{\n    background-color: none;\n    border: none;\n    display:flex;\n    flex-direction: column;\n    margin-bottom: 15px;\n}\n\n.formButton{\n    height:50px;\n    width:50px;\n    border-radius: 100%;\n    font-size: 2rem;\n    position:absolute;\n    left:1000px;\n    border: none;\n}\n\n/*Task properties*/\n.task{\n    position: relative;\n    width: 600px;\n    height:60px;\n    display:grid;\n    grid-template-columns: 40px 300px 150px 1fr;\n    color:blue;\n    background-color: rgb(235, 235, 235);\n    box-shadow: 2px 2px rgb(192, 192, 192);\n    align-items: center;\n    padding:10px;\n    margin-left:100px;\n    margin-bottom: 10px;\n}\n\n.checkbox{\n    height:20px;\n    width: 20px;\n    border-radius: 100%;\n}\n.checked{\n    background-color: red;\n\n}\n.delete{\n    width: 15px;\n    height: 15px;\n    color: red;\n    left:600px;\n    position:absolute;\n    font-weight:800;\n    border-radius: 10px;\n    border:none;\n    text-align: center;\n    visibility: hidden;\n}\n.delete:hover{\n    border: solid white;\n    box-shadow: 1px 1px 5px gray;\n}\n#deleteVisible{\n    visibility: visible;\n}\n.date{\n\n}\n\n/*Edit*/\n.inEditing{\n    border: solid 2px black;\n}\n#editBox{\n\n}\n\n/*View*/\n.inViewing{\n    border: solid 2px black;\n\n}\n#viewBox{\n    position: fixed;\n    left: 1220px;\n    top: 320px;\n    height:400px;\n    width:400px;\n    border:solid 2px black;\n    background-color: blanchedalmond;\n}\n#viewTitle{\n    justify-items: center;\n    width:350px;\n    height:30px;\n    padding:20px;\n    margin-bottom:20px;\n    max-width:350px;\n}\n#viewTitle:focus,\n#viewDesc:focus{\n    border:solid 2px black;\n\n}\n#viewDesc{\n    width:350px;\n    height:300px;\n    padding: 10px 25px 0px 25px ;\n    word-break:break-all;\n}\n\n\n\n.footer{\n    grid-area: 3/1/4/3;\n    background-color: black;\n    font-family: 'Courier New', Courier, monospace;\n    color: white;\n    text-align: center;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,QAAQ;IACR,iCAAiC;AACrC;;;AAGA;IACI,YAAY;IACZ,wCAAwC;IACxC,YAAY;IACZ,YAAY;;AAEhB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,oCAAoC;IACpC,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;;AAEvB;;AAEA;IACI,kBAAkB;IAClB,oCAAoC,CAAC,kBAAkB;IACvD,YAAY;IACZ,sBAAsB;IACtB,wBAAwB;IACxB,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;;AAEtB;;AAEA;IACI,WAAW;IACX,kCAAkC;IAClC,YAAY;IACZ,WAAW;IACX,mBAAmB;IACnB,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;AACnB;AACA;IACI,oCAAoC;IACpC,iBAAiB;;AAErB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,kCAAkC;IAClC,0BAA0B;AAC9B;AACA;IACI,kBAAkB;IAClB,eAAe;AACnB;AACA;IACI,kBAAkB;IAClB,YAAY;IACZ,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,yBAAyB;AAC7B;AACA;IACI,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,4BAA4B;IAC5B,YAAY;AAChB;AACA;IACI,oCAAoC;AACxC;AACA;IACI,YAAY;IACZ,WAAW;AACf;AACA;IACI,kBAAkB;IAClB,aAAa;IACb,gBAAgB;IAChB,iBAAiB;;AAErB;;AAEA,qBAAqB;AACrB;IACI,WAAW;IACX,YAAY;IACZ,oCAAoC;IACpC,aAAa;IACb,iBAAiB;IACjB,WAAW;AACf;AACA;IACI,WAAW;IACX,oCAAoC;AACxC;AACA;IACI,oCAAoC;IACpC,gBAAgB;IAChB,iBAAiB;AACrB;AACA;IACI,sBAAsB;IACtB,YAAY;IACZ,YAAY;IACZ,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,UAAU;IACV,mBAAmB;IACnB,eAAe;IACf,iBAAiB;IACjB,WAAW;IACX,YAAY;AAChB;;AAEA,kBAAkB;AAClB;IACI,kBAAkB;IAClB,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,2CAA2C;IAC3C,UAAU;IACV,oCAAoC;IACpC,sCAAsC;IACtC,mBAAmB;IACnB,YAAY;IACZ,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,WAAW;IACX,mBAAmB;AACvB;AACA;IACI,qBAAqB;;AAEzB;AACA;IACI,WAAW;IACX,YAAY;IACZ,UAAU;IACV,UAAU;IACV,iBAAiB;IACjB,eAAe;IACf,mBAAmB;IACnB,WAAW;IACX,kBAAkB;IAClB,kBAAkB;AACtB;AACA;IACI,mBAAmB;IACnB,4BAA4B;AAChC;AACA;IACI,mBAAmB;AACvB;AACA;;AAEA;;AAEA,OAAO;AACP;IACI,uBAAuB;AAC3B;AACA;;AAEA;;AAEA,OAAO;AACP;IACI,uBAAuB;;AAE3B;AACA;IACI,eAAe;IACf,YAAY;IACZ,UAAU;IACV,YAAY;IACZ,WAAW;IACX,sBAAsB;IACtB,gCAAgC;AACpC;AACA;IACI,qBAAqB;IACrB,WAAW;IACX,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,eAAe;AACnB;AACA;;IAEI,sBAAsB;;AAE1B;AACA;IACI,WAAW;IACX,YAAY;IACZ,4BAA4B;IAC5B,oBAAoB;AACxB;;;;AAIA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,8CAA8C;IAC9C,YAAY;IACZ,kBAAkB;AACtB",sourcesContent:["*{\n    padding:0;\n    margin:0;\n    font-family: 'Comfortaa', cursive;\n}\n\n\n.main{\n    display:grid;\n    grid-template: 200px 1fr 40px/ 350px 1fr;\n    height:100vh;\n    width: 100vw;\n\n}\n\n.header{\n    display:flex;\n    grid-area: 1/1/2/3;\n    background-color: rgb(243, 166, 140);\n    padding: 10px 20px;\n    font-size: 2.5rem;\n    align-items: center;\n\n}\n\n.sidebar{\n    grid-area: 2/1/3/2;\n    background-color: rgb(224, 104, 104);/*rgb(54, 41, 41)*/\n    display:flex;\n    flex-direction: column;\n    width: calc(100% - 50px);\n    height: 100%;\n    padding-left: 20px;\n    padding-top: 20px ;\n    \n}\n\n.sidebar button{\n    width:300px;\n    background-color: rgba(0, 0, 0, 0);\n    border: none;\n    height:40px;\n    margin-bottom: 15px;\n    text-align: left;\n    padding-left: 10px;\n    font-size: 2rem;\n}\n.sidebar button:hover{\n    background-color: rgb(236, 152, 152);\n    font-size: 2.3rem;\n    \n}\n\n.content{\n    grid-area: 2/2/3/3;\n    display:grid; \n    grid-template: 100px 1fr/ 1fr 1fr ;\n    padding: 30px 0px 0px 25px;\n}\n.contentTitle{\n    grid-area: 1/1/2/2;\n    font-size: 3rem;\n}\n.contentSorter{\n    grid-area: 1/2/2/3;\n    display:flex;\n    margin-left:5px;\n    width: 700px;\n    height: 50px;\n    justify-content: flex-end;\n}\n.contentSorter button{\n    height: 40px;\n    width: 60px;\n    padding:10px;\n    box-shadow: 2px 2px 2px gray;\n    border: none;\n}\n.contentSorter button:hover{\n    background-color: rgb(204, 204, 204);\n}\n.contentSorter img{\n    height: 20px;\n    width: 30px;\n}\n.taskArea{\n    grid-area: 2/1/3/3;\n    width: 1000px;\n    max-height:800px;\n    overflow-y:scroll;\n    \n}\n\n/*Today list section*/\n.toDoForm{\n    width:300px;\n    height:400px;\n    background-color: rgb(255, 117, 117);\n    padding: 10px;\n    position:absolute;\n    left:1000px;\n}\ninput{\n    border:none;\n    background-color: rgb(255, 195, 195);\n}\ntextarea{\n    background-color: rgb(255, 195, 195);\n    max-width: 300px;\n    max-height: 300px;\n}\nfieldset{\n    background-color: none;\n    border: none;\n    display:flex;\n    flex-direction: column;\n    margin-bottom: 15px;\n}\n\n.formButton{\n    height:50px;\n    width:50px;\n    border-radius: 100%;\n    font-size: 2rem;\n    position:absolute;\n    left:1000px;\n    border: none;\n}\n\n/*Task properties*/\n.task{\n    position: relative;\n    width: 600px;\n    height:60px;\n    display:grid;\n    grid-template-columns: 40px 300px 150px 1fr;\n    color:blue;\n    background-color: rgb(235, 235, 235);\n    box-shadow: 2px 2px rgb(192, 192, 192);\n    align-items: center;\n    padding:10px;\n    margin-left:100px;\n    margin-bottom: 10px;\n}\n\n.checkbox{\n    height:20px;\n    width: 20px;\n    border-radius: 100%;\n}\n.checked{\n    background-color: red;\n\n}\n.delete{\n    width: 15px;\n    height: 15px;\n    color: red;\n    left:600px;\n    position:absolute;\n    font-weight:800;\n    border-radius: 10px;\n    border:none;\n    text-align: center;\n    visibility: hidden;\n}\n.delete:hover{\n    border: solid white;\n    box-shadow: 1px 1px 5px gray;\n}\n#deleteVisible{\n    visibility: visible;\n}\n.date{\n\n}\n\n/*Edit*/\n.inEditing{\n    border: solid 2px black;\n}\n#editBox{\n\n}\n\n/*View*/\n.inViewing{\n    border: solid 2px black;\n\n}\n#viewBox{\n    position: fixed;\n    left: 1220px;\n    top: 320px;\n    height:400px;\n    width:400px;\n    border:solid 2px black;\n    background-color: blanchedalmond;\n}\n#viewTitle{\n    justify-items: center;\n    width:350px;\n    height:30px;\n    padding:20px;\n    margin-bottom:20px;\n    max-width:350px;\n}\n#viewTitle:focus,\n#viewDesc:focus{\n    border:solid 2px black;\n\n}\n#viewDesc{\n    width:350px;\n    height:300px;\n    padding: 10px 25px 0px 25px ;\n    word-break:break-all;\n}\n\n\n\n.footer{\n    grid-area: 3/1/4/3;\n    background-color: black;\n    font-family: 'Courier New', Courier, monospace;\n    color: white;\n    text-align: center;\n}\n"],sourceRoot:""}]);const a=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,A){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var a=0;a<this.length;a++){var d=this[a][0];null!=d&&(i[d]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);o&&i[s[0]]||(void 0!==A&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=A),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),A="/*# ".concat(r," */");return[e].concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var A={},i=[],a=0;a<n.length;a++){var d=n[a],c=o.base?d[0]+o.base:d[0],s=A[c]||0,l="".concat(c," ").concat(s);A[c]=s+1;var p=t(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var C=r(u,o);o.byIndex=a,e.splice(a,0,{identifier:l,updater:C,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var A=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<A.length;i++){var a=t(A[i]);e[a].references--}for(var d=o(n,r),c=0;c<A.length;c++){var s=t(A[c]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}A=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var A=e[o]={id:o,exports:{}};return n[o](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),A=t(569),i=t.n(A),a=t(565),d=t.n(a),c=t(216),s=t.n(c),l=t(589),p=t.n(l),u=t(426),C={};C.styleTagTransform=p(),C.setAttributes=d(),C.insert=i().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=s(),e()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;const x=[];let m=!1,g=!1;document.querySelector(".tasksArea");const h=document.querySelector(".content");document.addEventListener("click",(n=>{n.target.closest(".inViewing")||n.target.closest(".toDoForm")||n.target.closest("#viewBox")||1!=g||(document.getElementById("viewBox").remove(),document.querySelectorAll(".task").forEach((n=>{g=!1,n.classList.remove("inViewing")})))})),function(){const n=document.createElement("div");n.classList.add("contentSorter");const e=document.createElement("button"),t=document.createElement("img");t.setAttribute("src","https://seekicon.com/free-icon-download/list-stars_1.svg");const o=document.createElement("button"),r=document.createElement("img");r.setAttribute("src","https://seekicon.com/free-icon-download/ordered-list_3.svg");const A=document.createElement("button"),i=document.createElement("img");i.setAttribute("src","https://static-00.iconduck.com/assets.00/sort-calendar-descending-icon-512x402-bgm72yjs.png"),e.appendChild(t),o.appendChild(r),A.appendChild(i),n.appendChild(e),n.appendChild(o),n.appendChild(A),h.appendChild(n)}(),function(){const n=document.createElement("button");n.textContent="+",n.classList.add("formButton"),n.addEventListener("click",(()=>{1!=m&&function(){m=!0;const n=document.createElement("form");n.classList.add("toDoForm");const e=document.createElement("fieldset"),t=document.createElement("label");t.textContent="Task";const o=document.createElement("input");o.classList.add("taskName");const r=document.createElement("fieldset"),A=document.createElement("label");A.textContent="Description";const i=document.createElement("textArea");i.style.height="100px",i.classList.add("taskDesc");const a=document.createElement("button");a.addEventListener("click",(n=>{n.preventDefault(),function(){const n=document.querySelector(".taskName"),e=document.querySelector(".taskDesc");if(""==n.value)n.style.border="solid 1px red";else{let t={taskName:n.value,taskDesc:e.value};x.push(t),function(){const n=document.querySelector(".tasksArea");let e=x.length-1;const t=document.createElement("div");t.classList.add("task"),t.setAttribute("data-key",e);const o=document.createElement("button");o.classList.add("checkbox");const r=document.createElement("h2");r.textContent=x[e].taskName,document.createElement("div").textContent=x[e].taskDesc;const A=document.createElement("button");A.textContent="X",A.classList.add("delete"),t.appendChild(A),t.appendChild(o),t.appendChild(r),n.appendChild(t),document.querySelectorAll(".task").forEach((n=>{n.addEventListener("click",(e=>{if(".checkbox"!=e.target.closest&&".task"!=e.target.closest){let e=n.getAttribute("data-key"),t=x[e];0==g&&(n.classList.add("inViewing"),function(n,e){const t=document.createElement("div");t.setAttribute("id","viewBox");const o=document.createElement("h2");o.setAttribute("id","viewTitle"),o.setAttribute("contenteditable","true"),o.textContent=n;const r=document.createElement("div");r.setAttribute("id","viewDesc"),r.setAttribute("contenteditable","true"),r.textContent=e,t.appendChild(o),t.appendChild(r),h.appendChild(t)}(t.taskName,t.taskDesc),g=!0)}}))}))}(),m=!1,document.querySelector("form").remove(),document.querySelectorAll(".checkbox").forEach((n=>{n.addEventListener("click",(e=>{n.classList.toggle("checked"),e.stopImmediatePropagation()}))})),document.querySelectorAll(".delete").forEach((n=>{n.addEventListener("click",(()=>{let e=n.closest(".task"),t=e.getAttribute("data-key");x.splice(t,1),e.remove()}))})),function(){const n=document.querySelectorAll(".task"),e=document.querySelectorAll(".delete");n.forEach((n=>{n.addEventListener("mouseover",(()=>{e.forEach((n=>{n.setAttribute("id","deleteVisible")}))})),n.addEventListener("mouseout",(()=>{e.forEach((n=>{n.removeAttribute("id","deleteVisible")}))}))}))}()}}()})),a.textContent="submit",e.appendChild(t),e.appendChild(o),r.appendChild(A),r.appendChild(i),n.appendChild(e),n.appendChild(r),n.appendChild(a),h.appendChild(n)}()})),h.appendChild(n)}();const b=document.querySelector(".sidebar"),B=function(n){const e=b.getElementsByTagName("button");for(var t=0;t<e.length;t++)e[t].style.backgroundColor="",e[t].classList.remove("contentTitleChosen");n.style.backgroundColor="rgb(236, 152, 152)",n.classList.add("contentTitleChosen")},f=function(){!function(){const n=document.querySelector(".contentTitleChosen");y.textContent=n.textContent}(),"To-Do"==y.textContent||y.textContent},I=document.querySelector(".tasksButton");I.addEventListener("click",(()=>{B(I),f()})),I.style.backgroundColor="rgb(236, 152, 152)";const k=document.querySelector(".habitsButton");k.addEventListener("click",(()=>{B(k),f()}));const v=document.querySelector(".projectsButton");v.addEventListener("click",(()=>{B(v),f()}));const y=document.querySelector(".contentTitle");y.textContent="To-Do"})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,