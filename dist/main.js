(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),r=t.n(o),A=t(645),i=t.n(A)()(r());i.push([n.id,"*{\n    padding:0;\n    margin:0;\n    font-family: 'Comfortaa', cursive;\n}\n\n\n.main{\n    display:grid;\n    grid-template: 200px 1fr 40px/ 350px 1fr;\n    height:100vh;\n    width: 100vw;\n\n}\n\n.header{\n    display:flex;\n    grid-area: 1/1/2/3;\n    background-color: rgb(243, 166, 140);\n    padding: 10px 20px;\n    font-size: 2.5rem;\n    align-items: center;\n\n}\n\n.sidebar{\n    grid-area: 2/1/3/2;\n    background-color: rgb(224, 104, 104);/*rgb(54, 41, 41)*/\n    display:flex;\n    flex-direction: column;\n    width: calc(100% - 50px);\n    height: 100%;\n    padding-left: 20px;\n    padding-top: 20px ;\n    \n}\n\n.sidebar button{\n    width:300px;\n    background-color: rgba(0, 0, 0, 0);\n    border: none;\n    height:40px;\n    margin-bottom: 15px;\n    text-align: left;\n    padding-left: 10px;\n    font-size: 2rem;\n}\n.sidebar button:hover{\n    background-color: rgb(236, 152, 152);\n    font-size: 2.3rem;\n    \n}\n\n.content{\n    grid-area: 2/2/3/3;\n    display:grid; \n    grid-template: 100px 1fr/ 1fr 1fr ;\n    padding: 30px 0px 0px 25px;\n}\n.contentTitle{\n    grid-area: 1/1/2/2;\n    font-size: 3rem;\n}\n.contentSorter{\n    grid-area: 1/2/2/3;\n    display:flex;\n    margin-left:5px;\n    width: 700px;\n    height: 50px;\n    justify-content: flex-end;\n}\n.contentSorter button{\n    height: 40px;\n    width: 60px;\n    padding:10px;\n    box-shadow: 2px 2px 2px gray;\n    border: none;\n}\n.contentSorter button:hover{\n    background-color: rgb(204, 204, 204);\n}\n.contentSorter img{\n    height: 20px;\n    width: 30px;\n}\n.taskArea{\n    grid-area: 2/1/3/3;\n    width: 1000px;\n    max-height:800px;\n    overflow-y:scroll;\n    \n}\n\n/*Today list section*/\n.toDoForm{\n    width:300px;\n    height:400px;\n    background-color: rgb(255, 117, 117);\n    padding: 10px;\n    position:absolute;\n    left:1000px;\n}\ninput{\n    border:none;\n    background-color: rgb(255, 195, 195);\n}\ntextarea{\n    background-color: rgb(255, 195, 195);\n    max-width: 300px;\n    max-height: 300px;\n}\nfieldset{\n    background-color: none;\n    border: none;\n    display:flex;\n    flex-direction: column;\n    margin-bottom: 15px;\n}\n\n.formButton{\n    height:50px;\n    width:50px;\n    border-radius: 100%;\n    font-size: 2rem;\n    position:absolute;\n    left:1000px;\n    border: none;\n}\n\n/*Task properties*/\n.task{\n    position: relative;\n    width: 600px;\n    height:60px;\n    display:grid;\n    grid-template-columns: 40px 300px 150px 1fr;\n    color:blue;\n    background-color: rgb(235, 235, 235);\n    box-shadow: 2px 2px rgb(192, 192, 192);\n    align-items: center;\n    padding:10px;\n    margin-left:100px;\n    margin-bottom: 10px;\n}\n\n.checkbox{\n    height:20px;\n    width: 20px;\n    border-radius: 100%;\n}\n.checked{\n    background-color: red;\n\n}\n.delete{\n    width: 15px;\n    height: 15px;\n    color: red;\n    left:600px;\n    position:absolute;\n    font-weight:800;\n    border-radius: 10px;\n    border:none;\n    text-align: center;\n    visibility: hidden;\n}\n.delete:hover{\n    border: solid white;\n    box-shadow: 1px 1px 5px gray;\n}\n#deleteVisible{\n    visibility: visible;\n}\n.date{\n\n}\n\n/*Edit*/\n.inEditing{\n    border: solid 2px black;\n}\n#editBox{\n\n}\n\n/*View*/\n.inViewing{\n    border: solid 2px black;\n\n}\n#viewBox{\n    position: fixed;\n    left: 1220px;\n    top: 320px;\n    height:400px;\n    width:400px;\n    border:solid 2px black;\n    background-color: blanchedalmond;\n}\n#viewTitle{\n    justify-content: center;\n    width:350px;\n    height:30px;\n    padding:20px;\n    margin-bottom:20px;\n}\n#viewTitle:focus,\n#viewDesc:focus{\n    border:solid 2px black;\n\n}\n#viewDesc{\n    width:300px;\n    height:300px;\n    padding:20px;\n}\n\n\n\n\n.footer{\n    grid-area: 3/1/4/3;\n    background-color: black;\n    font-family: 'Courier New', Courier, monospace;\n    color: white;\n    text-align: center;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,QAAQ;IACR,iCAAiC;AACrC;;;AAGA;IACI,YAAY;IACZ,wCAAwC;IACxC,YAAY;IACZ,YAAY;;AAEhB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,oCAAoC;IACpC,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;;AAEvB;;AAEA;IACI,kBAAkB;IAClB,oCAAoC,CAAC,kBAAkB;IACvD,YAAY;IACZ,sBAAsB;IACtB,wBAAwB;IACxB,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;;AAEtB;;AAEA;IACI,WAAW;IACX,kCAAkC;IAClC,YAAY;IACZ,WAAW;IACX,mBAAmB;IACnB,gBAAgB;IAChB,kBAAkB;IAClB,eAAe;AACnB;AACA;IACI,oCAAoC;IACpC,iBAAiB;;AAErB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,kCAAkC;IAClC,0BAA0B;AAC9B;AACA;IACI,kBAAkB;IAClB,eAAe;AACnB;AACA;IACI,kBAAkB;IAClB,YAAY;IACZ,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,yBAAyB;AAC7B;AACA;IACI,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,4BAA4B;IAC5B,YAAY;AAChB;AACA;IACI,oCAAoC;AACxC;AACA;IACI,YAAY;IACZ,WAAW;AACf;AACA;IACI,kBAAkB;IAClB,aAAa;IACb,gBAAgB;IAChB,iBAAiB;;AAErB;;AAEA,qBAAqB;AACrB;IACI,WAAW;IACX,YAAY;IACZ,oCAAoC;IACpC,aAAa;IACb,iBAAiB;IACjB,WAAW;AACf;AACA;IACI,WAAW;IACX,oCAAoC;AACxC;AACA;IACI,oCAAoC;IACpC,gBAAgB;IAChB,iBAAiB;AACrB;AACA;IACI,sBAAsB;IACtB,YAAY;IACZ,YAAY;IACZ,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,UAAU;IACV,mBAAmB;IACnB,eAAe;IACf,iBAAiB;IACjB,WAAW;IACX,YAAY;AAChB;;AAEA,kBAAkB;AAClB;IACI,kBAAkB;IAClB,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,2CAA2C;IAC3C,UAAU;IACV,oCAAoC;IACpC,sCAAsC;IACtC,mBAAmB;IACnB,YAAY;IACZ,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,WAAW;IACX,mBAAmB;AACvB;AACA;IACI,qBAAqB;;AAEzB;AACA;IACI,WAAW;IACX,YAAY;IACZ,UAAU;IACV,UAAU;IACV,iBAAiB;IACjB,eAAe;IACf,mBAAmB;IACnB,WAAW;IACX,kBAAkB;IAClB,kBAAkB;AACtB;AACA;IACI,mBAAmB;IACnB,4BAA4B;AAChC;AACA;IACI,mBAAmB;AACvB;AACA;;AAEA;;AAEA,OAAO;AACP;IACI,uBAAuB;AAC3B;AACA;;AAEA;;AAEA,OAAO;AACP;IACI,uBAAuB;;AAE3B;AACA;IACI,eAAe;IACf,YAAY;IACZ,UAAU;IACV,YAAY;IACZ,WAAW;IACX,sBAAsB;IACtB,gCAAgC;AACpC;AACA;IACI,uBAAuB;IACvB,WAAW;IACX,WAAW;IACX,YAAY;IACZ,kBAAkB;AACtB;AACA;;IAEI,sBAAsB;;AAE1B;AACA;IACI,WAAW;IACX,YAAY;IACZ,YAAY;AAChB;;;;;AAKA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,8CAA8C;IAC9C,YAAY;IACZ,kBAAkB;AACtB",sourcesContent:["*{\n    padding:0;\n    margin:0;\n    font-family: 'Comfortaa', cursive;\n}\n\n\n.main{\n    display:grid;\n    grid-template: 200px 1fr 40px/ 350px 1fr;\n    height:100vh;\n    width: 100vw;\n\n}\n\n.header{\n    display:flex;\n    grid-area: 1/1/2/3;\n    background-color: rgb(243, 166, 140);\n    padding: 10px 20px;\n    font-size: 2.5rem;\n    align-items: center;\n\n}\n\n.sidebar{\n    grid-area: 2/1/3/2;\n    background-color: rgb(224, 104, 104);/*rgb(54, 41, 41)*/\n    display:flex;\n    flex-direction: column;\n    width: calc(100% - 50px);\n    height: 100%;\n    padding-left: 20px;\n    padding-top: 20px ;\n    \n}\n\n.sidebar button{\n    width:300px;\n    background-color: rgba(0, 0, 0, 0);\n    border: none;\n    height:40px;\n    margin-bottom: 15px;\n    text-align: left;\n    padding-left: 10px;\n    font-size: 2rem;\n}\n.sidebar button:hover{\n    background-color: rgb(236, 152, 152);\n    font-size: 2.3rem;\n    \n}\n\n.content{\n    grid-area: 2/2/3/3;\n    display:grid; \n    grid-template: 100px 1fr/ 1fr 1fr ;\n    padding: 30px 0px 0px 25px;\n}\n.contentTitle{\n    grid-area: 1/1/2/2;\n    font-size: 3rem;\n}\n.contentSorter{\n    grid-area: 1/2/2/3;\n    display:flex;\n    margin-left:5px;\n    width: 700px;\n    height: 50px;\n    justify-content: flex-end;\n}\n.contentSorter button{\n    height: 40px;\n    width: 60px;\n    padding:10px;\n    box-shadow: 2px 2px 2px gray;\n    border: none;\n}\n.contentSorter button:hover{\n    background-color: rgb(204, 204, 204);\n}\n.contentSorter img{\n    height: 20px;\n    width: 30px;\n}\n.taskArea{\n    grid-area: 2/1/3/3;\n    width: 1000px;\n    max-height:800px;\n    overflow-y:scroll;\n    \n}\n\n/*Today list section*/\n.toDoForm{\n    width:300px;\n    height:400px;\n    background-color: rgb(255, 117, 117);\n    padding: 10px;\n    position:absolute;\n    left:1000px;\n}\ninput{\n    border:none;\n    background-color: rgb(255, 195, 195);\n}\ntextarea{\n    background-color: rgb(255, 195, 195);\n    max-width: 300px;\n    max-height: 300px;\n}\nfieldset{\n    background-color: none;\n    border: none;\n    display:flex;\n    flex-direction: column;\n    margin-bottom: 15px;\n}\n\n.formButton{\n    height:50px;\n    width:50px;\n    border-radius: 100%;\n    font-size: 2rem;\n    position:absolute;\n    left:1000px;\n    border: none;\n}\n\n/*Task properties*/\n.task{\n    position: relative;\n    width: 600px;\n    height:60px;\n    display:grid;\n    grid-template-columns: 40px 300px 150px 1fr;\n    color:blue;\n    background-color: rgb(235, 235, 235);\n    box-shadow: 2px 2px rgb(192, 192, 192);\n    align-items: center;\n    padding:10px;\n    margin-left:100px;\n    margin-bottom: 10px;\n}\n\n.checkbox{\n    height:20px;\n    width: 20px;\n    border-radius: 100%;\n}\n.checked{\n    background-color: red;\n\n}\n.delete{\n    width: 15px;\n    height: 15px;\n    color: red;\n    left:600px;\n    position:absolute;\n    font-weight:800;\n    border-radius: 10px;\n    border:none;\n    text-align: center;\n    visibility: hidden;\n}\n.delete:hover{\n    border: solid white;\n    box-shadow: 1px 1px 5px gray;\n}\n#deleteVisible{\n    visibility: visible;\n}\n.date{\n\n}\n\n/*Edit*/\n.inEditing{\n    border: solid 2px black;\n}\n#editBox{\n\n}\n\n/*View*/\n.inViewing{\n    border: solid 2px black;\n\n}\n#viewBox{\n    position: fixed;\n    left: 1220px;\n    top: 320px;\n    height:400px;\n    width:400px;\n    border:solid 2px black;\n    background-color: blanchedalmond;\n}\n#viewTitle{\n    justify-content: center;\n    width:350px;\n    height:30px;\n    padding:20px;\n    margin-bottom:20px;\n}\n#viewTitle:focus,\n#viewDesc:focus{\n    border:solid 2px black;\n\n}\n#viewDesc{\n    width:300px;\n    height:300px;\n    padding:20px;\n}\n\n\n\n\n.footer{\n    grid-area: 3/1/4/3;\n    background-color: black;\n    font-family: 'Courier New', Courier, monospace;\n    color: white;\n    text-align: center;\n}\n"],sourceRoot:""}]);const a=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,A){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var a=0;a<this.length;a++){var d=this[a][0];null!=d&&(i[d]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);o&&i[s[0]]||(void 0!==A&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=A),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),A="/*# ".concat(r," */");return[e].concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var A={},i=[],a=0;a<n.length;a++){var d=n[a],c=o.base?d[0]+o.base:d[0],s=A[c]||0,l="".concat(c," ").concat(s);A[c]=s+1;var p=t(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var C=r(u,o);o.byIndex=a,e.splice(a,0,{identifier:l,updater:C,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var A=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<A.length;i++){var a=t(A[i]);e[a].references--}for(var d=o(n,r),c=0;c<A.length;c++){var s=t(A[c]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}A=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var A=e[o]={id:o,exports:{}};return n[o](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),A=t(569),i=t.n(A),a=t(565),d=t.n(a),c=t(216),s=t.n(c),l=t(589),p=t.n(l),u=t(426),C={};C.styleTagTransform=p(),C.setAttributes=d(),C.insert=i().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=s(),e()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;const m=[];let x=!1,g=!1;document.querySelector(".tasksArea");const h=document.querySelector(".content");document.addEventListener("click",(n=>{n.target.closest(".inViewing")||n.target.closest(".toDoForm")||n.target.closest("#viewBox")||1!=g||(document.getElementById("viewBox").remove(),document.querySelectorAll(".task").forEach((n=>{g=!1,n.classList.remove("inViewing")})))}));const b=document.querySelector(".sidebar"),f=function(n){const e=b.getElementsByTagName("button");for(var t=0;t<e.length;t++)e[t].style.backgroundColor="",e[t].classList.remove("contentTitleChosen");n.style.backgroundColor="rgb(236, 152, 152)",n.classList.add("contentTitleChosen")},B=function(){const n=document.querySelector(".contentTitleChosen");j.textContent=n.textContent},I=document.querySelector(".todayButton");I.addEventListener("click",(()=>{f(I),B()})),I.style.backgroundColor="rgb(236, 152, 152)";const k=document.querySelector(".upcomingButton");k.addEventListener("click",(()=>{f(k),B()}));const v=document.querySelector(".accomplishedButton");v.addEventListener("click",(()=>{f(v),B()}));const y=document.querySelector(".projectsButton");y.addEventListener("click",(()=>{f(y),B()}));const w=document.querySelector(".content"),E=document.createElement("div");E.classList.add("contentSorter");const Y=document.createElement("button"),S=document.createElement("img");S.setAttribute("src","https://seekicon.com/free-icon-download/list-stars_1.svg");const W=document.createElement("button"),Z=document.createElement("img");Z.setAttribute("src","https://seekicon.com/free-icon-download/ordered-list_3.svg");const L=document.createElement("button"),T=document.createElement("img");T.setAttribute("src","https://static-00.iconduck.com/assets.00/sort-calendar-descending-icon-512x402-bgm72yjs.png"),Y.appendChild(S),W.appendChild(Z),L.appendChild(T),E.appendChild(Y),E.appendChild(W),E.appendChild(L);const q=document.createElement("button");q.textContent="+",q.classList.add("formButton"),q.addEventListener("click",(()=>{1!=x&&function(){x=!0;const n=document.createElement("form");n.classList.add("toDoForm");const e=document.createElement("fieldset"),t=document.createElement("label");t.textContent="Task";const o=document.createElement("input");o.classList.add("taskName");const r=document.createElement("fieldset"),A=document.createElement("label");A.textContent="Description";const i=document.createElement("textArea");i.style.height="100px",i.classList.add("taskDesc");const a=document.createElement("button");a.addEventListener("click",(n=>{n.preventDefault(),function(){const n=document.querySelector(".taskName"),e=document.querySelector(".taskDesc");if(""==n.value)n.style.border="solid 1px red";else{let t={taskName:n.value,taskDesc:e.value};m.push(t),function(){const n=document.querySelector(".tasksArea");let e=m.length-1;const t=document.createElement("div");t.classList.add("task"),t.setAttribute("data-key",e);const o=document.createElement("button");o.classList.add("checkbox");const r=document.createElement("h2");r.textContent=m[e].taskName;const A=document.createElement("div");A.textContent=m[e].taskDesc;const i=document.createElement("button");i.textContent="X",i.classList.add("delete"),t.appendChild(i),t.appendChild(o),t.appendChild(r),t.appendChild(A),n.appendChild(t),document.querySelectorAll(".task").forEach((n=>{n.addEventListener("click",(e=>{if(".checkbox"!=e.target.closest&&".task"!=e.target.closest){let e=n.getAttribute("data-key"),t=m[e];0==g&&(n.classList.add("inViewing"),function(n,e){const t=document.createElement("div");t.setAttribute("id","viewBox");const o=document.createElement("h2");o.setAttribute("id","viewTitle"),o.textContent=n;const r=document.createElement("div");r.setAttribute("id","viewDesc"),r.textContent=e,t.appendChild(o),t.appendChild(r),h.appendChild(t)}(t.taskName,t.taskDesc),g=!0)}}))}))}(),x=!1,document.querySelector("form").remove(),document.querySelectorAll(".checkbox").forEach((n=>{n.addEventListener("click",(e=>{n.classList.toggle("checked"),e.stopImmediatePropagation()}))})),document.querySelectorAll(".delete").forEach((n=>{n.addEventListener("click",(()=>{let e=n.closest(".task"),t=e.getAttribute("data-key");m.splice(t,1),e.remove()}))})),function(){const n=document.querySelectorAll(".task"),e=document.querySelectorAll(".delete");n.forEach((n=>{n.addEventListener("mouseover",(()=>{e.forEach((n=>{n.setAttribute("id","deleteVisible")}))})),n.addEventListener("mouseout",(()=>{e.forEach((n=>{n.removeAttribute("id","deleteVisible")}))}))}))}()}}()})),a.textContent="submit",e.appendChild(t),e.appendChild(o),r.appendChild(A),r.appendChild(i),n.appendChild(e),n.appendChild(r),n.appendChild(a),h.appendChild(n)}()})),w.appendChild(q);const j=document.querySelector(".contentTitle");j.textContent="Today",w.appendChild(E)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEdBQ3BCLE1BQU1iLEVBQWVwRSxTQUFTQyxjQUFjLGlCQUM1Q21FLEVBQWFDLFlBQWMsUUFFM0IsRUFBUTVELFlBQVlpRSxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG8tZG8tbGlzdHMvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3RvLWRvLWxpc3RzLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90by1kby1saXN0cy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3RzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3RzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90by1kby1saXN0cy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90by1kby1saXN0cy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90by1kby1saXN0cy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3RzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdHMvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdHMvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdHMvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvLWRvLWxpc3RzL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdHMvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3RvLWRvLWxpc3RzLy4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3RvLWRvLWxpc3RzLy4vc3JjL3Rhc2tzLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3RzLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAqe1xuICAgIHBhZGRpbmc6MDtcbiAgICBtYXJnaW46MDtcbiAgICBmb250LWZhbWlseTogJ0NvbWZvcnRhYScsIGN1cnNpdmU7XG59XG5cblxuLm1haW57XG4gICAgZGlzcGxheTpncmlkO1xuICAgIGdyaWQtdGVtcGxhdGU6IDIwMHB4IDFmciA0MHB4LyAzNTBweCAxZnI7XG4gICAgaGVpZ2h0OjEwMHZoO1xuICAgIHdpZHRoOiAxMDB2dztcblxufVxuXG4uaGVhZGVye1xuICAgIGRpc3BsYXk6ZmxleDtcbiAgICBncmlkLWFyZWE6IDEvMS8yLzM7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MywgMTY2LCAxNDApO1xuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgICBmb250LXNpemU6IDIuNXJlbTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG59XG5cbi5zaWRlYmFye1xuICAgIGdyaWQtYXJlYTogMi8xLzMvMjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjI0LCAxMDQsIDEwNCk7LypyZ2IoNTQsIDQxLCA0MSkqL1xuICAgIGRpc3BsYXk6ZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA1MHB4KTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICAgIHBhZGRpbmctdG9wOiAyMHB4IDtcbiAgICBcbn1cblxuLnNpZGViYXIgYnV0dG9ue1xuICAgIHdpZHRoOjMwMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGhlaWdodDo0MHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gICAgZm9udC1zaXplOiAycmVtO1xufVxuLnNpZGViYXIgYnV0dG9uOmhvdmVye1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzYsIDE1MiwgMTUyKTtcbiAgICBmb250LXNpemU6IDIuM3JlbTtcbiAgICBcbn1cblxuLmNvbnRlbnR7XG4gICAgZ3JpZC1hcmVhOiAyLzIvMy8zO1xuICAgIGRpc3BsYXk6Z3JpZDsgXG4gICAgZ3JpZC10ZW1wbGF0ZTogMTAwcHggMWZyLyAxZnIgMWZyIDtcbiAgICBwYWRkaW5nOiAzMHB4IDBweCAwcHggMjVweDtcbn1cbi5jb250ZW50VGl0bGV7XG4gICAgZ3JpZC1hcmVhOiAxLzEvMi8yO1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbn1cbi5jb250ZW50U29ydGVye1xuICAgIGdyaWQtYXJlYTogMS8yLzIvMztcbiAgICBkaXNwbGF5OmZsZXg7XG4gICAgbWFyZ2luLWxlZnQ6NXB4O1xuICAgIHdpZHRoOiA3MDBweDtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cbi5jb250ZW50U29ydGVyIGJ1dHRvbntcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgd2lkdGg6IDYwcHg7XG4gICAgcGFkZGluZzoxMHB4O1xuICAgIGJveC1zaGFkb3c6IDJweCAycHggMnB4IGdyYXk7XG4gICAgYm9yZGVyOiBub25lO1xufVxuLmNvbnRlbnRTb3J0ZXIgYnV0dG9uOmhvdmVye1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMDQsIDIwNCwgMjA0KTtcbn1cbi5jb250ZW50U29ydGVyIGltZ3tcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgd2lkdGg6IDMwcHg7XG59XG4udGFza0FyZWF7XG4gICAgZ3JpZC1hcmVhOiAyLzEvMy8zO1xuICAgIHdpZHRoOiAxMDAwcHg7XG4gICAgbWF4LWhlaWdodDo4MDBweDtcbiAgICBvdmVyZmxvdy15OnNjcm9sbDtcbiAgICBcbn1cblxuLypUb2RheSBsaXN0IHNlY3Rpb24qL1xuLnRvRG9Gb3Jte1xuICAgIHdpZHRoOjMwMHB4O1xuICAgIGhlaWdodDo0MDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAxMTcsIDExNyk7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICBsZWZ0OjEwMDBweDtcbn1cbmlucHV0e1xuICAgIGJvcmRlcjpub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDE5NSwgMTk1KTtcbn1cbnRleHRhcmVhe1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDE5NSwgMTk1KTtcbiAgICBtYXgtd2lkdGg6IDMwMHB4O1xuICAgIG1heC1oZWlnaHQ6IDMwMHB4O1xufVxuZmllbGRzZXR7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgZGlzcGxheTpmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cblxuLmZvcm1CdXR0b257XG4gICAgaGVpZ2h0OjUwcHg7XG4gICAgd2lkdGg6NTBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICBsZWZ0OjEwMDBweDtcbiAgICBib3JkZXI6IG5vbmU7XG59XG5cbi8qVGFzayBwcm9wZXJ0aWVzKi9cbi50YXNre1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogNjAwcHg7XG4gICAgaGVpZ2h0OjYwcHg7XG4gICAgZGlzcGxheTpncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNDBweCAzMDBweCAxNTBweCAxZnI7XG4gICAgY29sb3I6Ymx1ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM1LCAyMzUsIDIzNSk7XG4gICAgYm94LXNoYWRvdzogMnB4IDJweCByZ2IoMTkyLCAxOTIsIDE5Mik7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOjEwcHg7XG4gICAgbWFyZ2luLWxlZnQ6MTAwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuLmNoZWNrYm94e1xuICAgIGhlaWdodDoyMHB4O1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG59XG4uY2hlY2tlZHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG5cbn1cbi5kZWxldGV7XG4gICAgd2lkdGg6IDE1cHg7XG4gICAgaGVpZ2h0OiAxNXB4O1xuICAgIGNvbG9yOiByZWQ7XG4gICAgbGVmdDo2MDBweDtcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICBmb250LXdlaWdodDo4MDA7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBib3JkZXI6bm9uZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuLmRlbGV0ZTpob3ZlcntcbiAgICBib3JkZXI6IHNvbGlkIHdoaXRlO1xuICAgIGJveC1zaGFkb3c6IDFweCAxcHggNXB4IGdyYXk7XG59XG4jZGVsZXRlVmlzaWJsZXtcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xufVxuLmRhdGV7XG5cbn1cblxuLypFZGl0Ki9cbi5pbkVkaXRpbmd7XG4gICAgYm9yZGVyOiBzb2xpZCAycHggYmxhY2s7XG59XG4jZWRpdEJveHtcblxufVxuXG4vKlZpZXcqL1xuLmluVmlld2luZ3tcbiAgICBib3JkZXI6IHNvbGlkIDJweCBibGFjaztcblxufVxuI3ZpZXdCb3h7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGxlZnQ6IDEyMjBweDtcbiAgICB0b3A6IDMyMHB4O1xuICAgIGhlaWdodDo0MDBweDtcbiAgICB3aWR0aDo0MDBweDtcbiAgICBib3JkZXI6c29saWQgMnB4IGJsYWNrO1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYW5jaGVkYWxtb25kO1xufVxuI3ZpZXdUaXRsZXtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDozNTBweDtcbiAgICBoZWlnaHQ6MzBweDtcbiAgICBwYWRkaW5nOjIwcHg7XG4gICAgbWFyZ2luLWJvdHRvbToyMHB4O1xufVxuI3ZpZXdUaXRsZTpmb2N1cyxcbiN2aWV3RGVzYzpmb2N1c3tcbiAgICBib3JkZXI6c29saWQgMnB4IGJsYWNrO1xuXG59XG4jdmlld0Rlc2N7XG4gICAgd2lkdGg6MzAwcHg7XG4gICAgaGVpZ2h0OjMwMHB4O1xuICAgIHBhZGRpbmc6MjBweDtcbn1cblxuXG5cblxuLmZvb3RlcntcbiAgICBncmlkLWFyZWE6IDMvMS80LzM7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gICAgZm9udC1mYW1pbHk6ICdDb3VyaWVyIE5ldycsIENvdXJpZXIsIG1vbm9zcGFjZTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksU0FBUztJQUNULFFBQVE7SUFDUixpQ0FBaUM7QUFDckM7OztBQUdBO0lBQ0ksWUFBWTtJQUNaLHdDQUF3QztJQUN4QyxZQUFZO0lBQ1osWUFBWTs7QUFFaEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLG9DQUFvQztJQUNwQyxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLG1CQUFtQjs7QUFFdkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsb0NBQW9DLENBQUMsa0JBQWtCO0lBQ3ZELFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsd0JBQXdCO0lBQ3hCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsa0JBQWtCOztBQUV0Qjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxrQ0FBa0M7SUFDbEMsWUFBWTtJQUNaLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25CO0FBQ0E7SUFDSSxvQ0FBb0M7SUFDcEMsaUJBQWlCOztBQUVyQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osa0NBQWtDO0lBQ2xDLDBCQUEwQjtBQUM5QjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLGVBQWU7QUFDbkI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osZUFBZTtJQUNmLFlBQVk7SUFDWixZQUFZO0lBQ1oseUJBQXlCO0FBQzdCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLFlBQVk7SUFDWiw0QkFBNEI7SUFDNUIsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksb0NBQW9DO0FBQ3hDO0FBQ0E7SUFDSSxZQUFZO0lBQ1osV0FBVztBQUNmO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixpQkFBaUI7O0FBRXJCOztBQUVBLHFCQUFxQjtBQUNyQjtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osb0NBQW9DO0lBQ3BDLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsV0FBVztBQUNmO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsb0NBQW9DO0FBQ3hDO0FBQ0E7SUFDSSxvQ0FBb0M7SUFDcEMsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxVQUFVO0lBQ1YsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsV0FBVztJQUNYLFlBQVk7QUFDaEI7O0FBRUEsa0JBQWtCO0FBQ2xCO0lBQ0ksa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixXQUFXO0lBQ1gsWUFBWTtJQUNaLDJDQUEyQztJQUMzQyxVQUFVO0lBQ1Ysb0NBQW9DO0lBQ3BDLHNDQUFzQztJQUN0QyxtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsV0FBVztJQUNYLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0kscUJBQXFCOztBQUV6QjtBQUNBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixVQUFVO0lBQ1YsVUFBVTtJQUNWLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2YsbUJBQW1CO0lBQ25CLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsNEJBQTRCO0FBQ2hDO0FBQ0E7SUFDSSxtQkFBbUI7QUFDdkI7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7SUFDSSx1QkFBdUI7QUFDM0I7QUFDQTs7QUFFQTs7QUFFQSxPQUFPO0FBQ1A7SUFDSSx1QkFBdUI7O0FBRTNCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsWUFBWTtJQUNaLFVBQVU7SUFDVixZQUFZO0lBQ1osV0FBVztJQUNYLHNCQUFzQjtJQUN0QixnQ0FBZ0M7QUFDcEM7QUFDQTtJQUNJLHVCQUF1QjtJQUN2QixXQUFXO0lBQ1gsV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7QUFDdEI7QUFDQTs7SUFFSSxzQkFBc0I7O0FBRTFCO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLFlBQVk7QUFDaEI7Ozs7O0FBS0E7SUFDSSxrQkFBa0I7SUFDbEIsdUJBQXVCO0lBQ3ZCLDhDQUE4QztJQUM5QyxZQUFZO0lBQ1osa0JBQWtCO0FBQ3RCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIip7XFxuICAgIHBhZGRpbmc6MDtcXG4gICAgbWFyZ2luOjA7XFxuICAgIGZvbnQtZmFtaWx5OiAnQ29tZm9ydGFhJywgY3Vyc2l2ZTtcXG59XFxuXFxuXFxuLm1haW57XFxuICAgIGRpc3BsYXk6Z3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZTogMjAwcHggMWZyIDQwcHgvIDM1MHB4IDFmcjtcXG4gICAgaGVpZ2h0OjEwMHZoO1xcbiAgICB3aWR0aDogMTAwdnc7XFxuXFxufVxcblxcbi5oZWFkZXJ7XFxuICAgIGRpc3BsYXk6ZmxleDtcXG4gICAgZ3JpZC1hcmVhOiAxLzEvMi8zO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQzLCAxNjYsIDE0MCk7XFxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcXG4gICAgZm9udC1zaXplOiAyLjVyZW07XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuXFxufVxcblxcbi5zaWRlYmFye1xcbiAgICBncmlkLWFyZWE6IDIvMS8zLzI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMjQsIDEwNCwgMTA0KTsvKnJnYig1NCwgNDEsIDQxKSovXFxuICAgIGRpc3BsYXk6ZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDUwcHgpO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIHBhZGRpbmctbGVmdDogMjBweDtcXG4gICAgcGFkZGluZy10b3A6IDIwcHggO1xcbiAgICBcXG59XFxuXFxuLnNpZGViYXIgYnV0dG9ue1xcbiAgICB3aWR0aDozMDBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBoZWlnaHQ6NDBweDtcXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xcbiAgICBmb250LXNpemU6IDJyZW07XFxufVxcbi5zaWRlYmFyIGJ1dHRvbjpob3ZlcntcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzNiwgMTUyLCAxNTIpO1xcbiAgICBmb250LXNpemU6IDIuM3JlbTtcXG4gICAgXFxufVxcblxcbi5jb250ZW50e1xcbiAgICBncmlkLWFyZWE6IDIvMi8zLzM7XFxuICAgIGRpc3BsYXk6Z3JpZDsgXFxuICAgIGdyaWQtdGVtcGxhdGU6IDEwMHB4IDFmci8gMWZyIDFmciA7XFxuICAgIHBhZGRpbmc6IDMwcHggMHB4IDBweCAyNXB4O1xcbn1cXG4uY29udGVudFRpdGxle1xcbiAgICBncmlkLWFyZWE6IDEvMS8yLzI7XFxuICAgIGZvbnQtc2l6ZTogM3JlbTtcXG59XFxuLmNvbnRlbnRTb3J0ZXJ7XFxuICAgIGdyaWQtYXJlYTogMS8yLzIvMztcXG4gICAgZGlzcGxheTpmbGV4O1xcbiAgICBtYXJnaW4tbGVmdDo1cHg7XFxuICAgIHdpZHRoOiA3MDBweDtcXG4gICAgaGVpZ2h0OiA1MHB4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xcbn1cXG4uY29udGVudFNvcnRlciBidXR0b257XFxuICAgIGhlaWdodDogNDBweDtcXG4gICAgd2lkdGg6IDYwcHg7XFxuICAgIHBhZGRpbmc6MTBweDtcXG4gICAgYm94LXNoYWRvdzogMnB4IDJweCAycHggZ3JheTtcXG4gICAgYm9yZGVyOiBub25lO1xcbn1cXG4uY29udGVudFNvcnRlciBidXR0b246aG92ZXJ7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMDQsIDIwNCwgMjA0KTtcXG59XFxuLmNvbnRlbnRTb3J0ZXIgaW1ne1xcbiAgICBoZWlnaHQ6IDIwcHg7XFxuICAgIHdpZHRoOiAzMHB4O1xcbn1cXG4udGFza0FyZWF7XFxuICAgIGdyaWQtYXJlYTogMi8xLzMvMztcXG4gICAgd2lkdGg6IDEwMDBweDtcXG4gICAgbWF4LWhlaWdodDo4MDBweDtcXG4gICAgb3ZlcmZsb3cteTpzY3JvbGw7XFxuICAgIFxcbn1cXG5cXG4vKlRvZGF5IGxpc3Qgc2VjdGlvbiovXFxuLnRvRG9Gb3Jte1xcbiAgICB3aWR0aDozMDBweDtcXG4gICAgaGVpZ2h0OjQwMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAxMTcsIDExNyk7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xcbiAgICBsZWZ0OjEwMDBweDtcXG59XFxuaW5wdXR7XFxuICAgIGJvcmRlcjpub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAxOTUsIDE5NSk7XFxufVxcbnRleHRhcmVhe1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAxOTUsIDE5NSk7XFxuICAgIG1heC13aWR0aDogMzAwcHg7XFxuICAgIG1heC1oZWlnaHQ6IDMwMHB4O1xcbn1cXG5maWVsZHNldHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBkaXNwbGF5OmZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XFxufVxcblxcbi5mb3JtQnV0dG9ue1xcbiAgICBoZWlnaHQ6NTBweDtcXG4gICAgd2lkdGg6NTBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcXG4gICAgZm9udC1zaXplOiAycmVtO1xcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcXG4gICAgbGVmdDoxMDAwcHg7XFxuICAgIGJvcmRlcjogbm9uZTtcXG59XFxuXFxuLypUYXNrIHByb3BlcnRpZXMqL1xcbi50YXNre1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIHdpZHRoOiA2MDBweDtcXG4gICAgaGVpZ2h0OjYwcHg7XFxuICAgIGRpc3BsYXk6Z3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA0MHB4IDMwMHB4IDE1MHB4IDFmcjtcXG4gICAgY29sb3I6Ymx1ZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIzNSwgMjM1LCAyMzUpO1xcbiAgICBib3gtc2hhZG93OiAycHggMnB4IHJnYigxOTIsIDE5MiwgMTkyKTtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgcGFkZGluZzoxMHB4O1xcbiAgICBtYXJnaW4tbGVmdDoxMDBweDtcXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG59XFxuXFxuLmNoZWNrYm94e1xcbiAgICBoZWlnaHQ6MjBweDtcXG4gICAgd2lkdGg6IDIwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XFxufVxcbi5jaGVja2Vke1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxuXFxufVxcbi5kZWxldGV7XFxuICAgIHdpZHRoOiAxNXB4O1xcbiAgICBoZWlnaHQ6IDE1cHg7XFxuICAgIGNvbG9yOiByZWQ7XFxuICAgIGxlZnQ6NjAwcHg7XFxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xcbiAgICBmb250LXdlaWdodDo4MDA7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIGJvcmRlcjpub25lO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcXG59XFxuLmRlbGV0ZTpob3ZlcntcXG4gICAgYm9yZGVyOiBzb2xpZCB3aGl0ZTtcXG4gICAgYm94LXNoYWRvdzogMXB4IDFweCA1cHggZ3JheTtcXG59XFxuI2RlbGV0ZVZpc2libGV7XFxuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XFxufVxcbi5kYXRle1xcblxcbn1cXG5cXG4vKkVkaXQqL1xcbi5pbkVkaXRpbmd7XFxuICAgIGJvcmRlcjogc29saWQgMnB4IGJsYWNrO1xcbn1cXG4jZWRpdEJveHtcXG5cXG59XFxuXFxuLypWaWV3Ki9cXG4uaW5WaWV3aW5ne1xcbiAgICBib3JkZXI6IHNvbGlkIDJweCBibGFjaztcXG5cXG59XFxuI3ZpZXdCb3h7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgbGVmdDogMTIyMHB4O1xcbiAgICB0b3A6IDMyMHB4O1xcbiAgICBoZWlnaHQ6NDAwcHg7XFxuICAgIHdpZHRoOjQwMHB4O1xcbiAgICBib3JkZXI6c29saWQgMnB4IGJsYWNrO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFuY2hlZGFsbW9uZDtcXG59XFxuI3ZpZXdUaXRsZXtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIHdpZHRoOjM1MHB4O1xcbiAgICBoZWlnaHQ6MzBweDtcXG4gICAgcGFkZGluZzoyMHB4O1xcbiAgICBtYXJnaW4tYm90dG9tOjIwcHg7XFxufVxcbiN2aWV3VGl0bGU6Zm9jdXMsXFxuI3ZpZXdEZXNjOmZvY3Vze1xcbiAgICBib3JkZXI6c29saWQgMnB4IGJsYWNrO1xcblxcbn1cXG4jdmlld0Rlc2N7XFxuICAgIHdpZHRoOjMwMHB4O1xcbiAgICBoZWlnaHQ6MzAwcHg7XFxuICAgIHBhZGRpbmc6MjBweDtcXG59XFxuXFxuXFxuXFxuXFxuLmZvb3RlcntcXG4gICAgZ3JpZC1hcmVhOiAzLzEvNC8zO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXG4gICAgZm9udC1mYW1pbHk6ICdDb3VyaWVyIE5ldycsIENvdXJpZXIsIG1vbm9zcGFjZTtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJleHBvcnQge3RvRG9DcmVhdG9yLCB0b0RvRm9ybUNyZWF0b3IsIHRvRG9Gb3JtUmVtb3ZlciwgYWRkVGFza1RvSHRtbCB9XG5leHBvcnQgY29uc3QgdGFza3NBcnJheSA9IFtdXG5leHBvcnQgbGV0IGZvcm1BY3RpdmUgPSBmYWxzZVxubGV0IGluRWRpdCA9IGZhbHNlXG5sZXQgaW5WaWV3ID0gZmFsc2VcbmNvbnN0IHRhc2tzQXJlYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudGFza3NBcmVhXCIpXG5jb25zdCBjb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jb250ZW50XCIpXG5cblxuLy9Gb3JtIENyZWF0b3JcbmZ1bmN0aW9uIHRvRG9Gb3JtQ3JlYXRvcigpe1xuICAgIGZvcm1BY3RpdmUgPSB0cnVlXG4gICAgY29uc3QgdG9Eb0Zvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKS8vQ3JlYXRlIEZvcm1cbiAgICB0b0RvRm9ybS5jbGFzc0xpc3QuYWRkKFwidG9Eb0Zvcm1cIilcblxuICAgIGNvbnN0IG5hbWVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIikvL05hbWUgRmllbGRcbiAgICBjb25zdCB0YXNrTmFtZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpXG4gICAgdGFza05hbWVMYWJlbC50ZXh0Q29udGVudCA9IFwiVGFza1wiXG4gICAgY29uc3QgdGFza05hbWVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKS8vTmFtZSBpbnB1dFxuICAgIHRhc2tOYW1lSW5wdXQuY2xhc3NMaXN0LmFkZChcInRhc2tOYW1lXCIpXG5cbiAgICBjb25zdCBkZXNjRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpLy9EZXNjIEZpZWxkXG4gICAgY29uc3QgdGFza0Rlc2NMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKVxuICAgIHRhc2tEZXNjTGFiZWwudGV4dENvbnRlbnQgPSBcIkRlc2NyaXB0aW9uXCJcbiAgICBjb25zdCB0YXNrRGVzY0lucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRleHRBcmVhXCIpLy9EZXNjIGlucHV0XG4gICAgdGFza0Rlc2NJbnB1dC5zdHlsZS5oZWlnaHQgPSBcIjEwMHB4XCJcbiAgICB0YXNrRGVzY0lucHV0LmNsYXNzTGlzdC5hZGQoXCJ0YXNrRGVzY1wiKVxuICAgIFxuICAgIGNvbnN0IHN1Ym1pdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIilcbiAgICBzdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGUpPT57XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICByZXF1aXJlTmFtZSgpXG4gICAgfSlcbiAgICBzdWJtaXQudGV4dENvbnRlbnQgPSBcInN1Ym1pdFwiXG5cbiAgICBuYW1lRGl2LmFwcGVuZENoaWxkKHRhc2tOYW1lTGFiZWwpXG4gICAgbmFtZURpdi5hcHBlbmRDaGlsZCh0YXNrTmFtZUlucHV0KVxuICAgIGRlc2NEaXYuYXBwZW5kQ2hpbGQodGFza0Rlc2NMYWJlbClcbiAgICBkZXNjRGl2LmFwcGVuZENoaWxkKHRhc2tEZXNjSW5wdXQpXG5cbiAgICB0b0RvRm9ybS5hcHBlbmRDaGlsZChuYW1lRGl2KVxuICAgIHRvRG9Gb3JtLmFwcGVuZENoaWxkKGRlc2NEaXYpXG4gICAgdG9Eb0Zvcm0uYXBwZW5kQ2hpbGQoc3VibWl0KVxuXG4gICAgY29udGVudC5hcHBlbmRDaGlsZCh0b0RvRm9ybSlcblxufVxuZnVuY3Rpb24gdG9Eb0Zvcm1SZW1vdmVyKCl7Ly8gUmVtb3ZlcyBmb3JtXG4gICAgZm9ybUFjdGl2ZSA9IGZhbHNlXG4gICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJmb3JtXCIpLnJlbW92ZSgpXG59XG5mdW5jdGlvbiByZXF1aXJlTmFtZSgpeyAvL1JlcXVpcmVzIFRhc2sgbmFtZSBiZWZvcmUgYWxsb3dpbmcgYSBzdWJtaXNzaW9uXG4gICAgY29uc3QgdGFza05hbWVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudGFza05hbWVcIilcbiAgICBjb25zdCB0YXNrRGVzY0lucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50YXNrRGVzY1wiKVxuICAgIGlmKHRhc2tOYW1lSW5wdXQudmFsdWUgPT0gXCJcIil7XG4gICAgICAgIHRhc2tOYW1lSW5wdXQuc3R5bGUuYm9yZGVyID0gXCJzb2xpZCAxcHggcmVkXCJcbiAgICB9XG4gICAgZWxzZXtcbiAgICAgICAgbGV0IHRhc2sgPSB0b0RvQ3JlYXRvcih0YXNrTmFtZUlucHV0LnZhbHVlLCB0YXNrRGVzY0lucHV0LnZhbHVlKVxuICAgICAgICB0YXNrc0FycmF5LnB1c2godGFzaylcbiAgICAgICAgYWRkVGFza1RvSHRtbCgpXG4gICAgICAgIHRvRG9Gb3JtUmVtb3ZlcigpIFxuICAgICAgICBjaGVja2xpc3QoKVxuICAgICAgICBkZWxldGVUYXNrcygpXG4gICAgICAgIHNob3dEZWxldGUoKVxuICAgIH0gXG59XG5cblxuXG4vL1Rhc2tDcmVhdG9yXG5mdW5jdGlvbiB0b0RvQ3JlYXRvcihuYW1lLCBkZXNjKXtcbiAgICBsZXQgdGFza05hbWUgPSBuYW1lXG4gICAgbGV0IHRhc2tEZXNjID0gZGVzY1xuXG4gICBcbiAgICByZXR1cm57XG4gICAgICAgIHRhc2tOYW1lLFxuICAgICAgICB0YXNrRGVzY1xuICAgIH1cbn1cblxuZnVuY3Rpb24gYWRkVGFza1RvSHRtbCgpey8vIGFkZCB0YXNrXG4gICAgY29uc3QgdGFza3NBcmVhID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50YXNrc0FyZWFcIilcbiAgICBsZXQgbnVtUGxhY2VtZW50ID0gdGFza3NBcnJheS5sZW5ndGggLSAxXG4gICAgICAgIGNvbnN0IHRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpXG4gICAgICAgIHRhc2suY2xhc3NMaXN0LmFkZChcInRhc2tcIilcbiAgICAgICAgdGFzay5zZXRBdHRyaWJ1dGUoXCJkYXRhLWtleVwiLCBudW1QbGFjZW1lbnQpXG5cbiAgICAgICAgY29uc3QgY2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpXG4gICAgICAgIGNoZWNrYm94LmNsYXNzTGlzdC5hZGQoXCJjaGVja2JveFwiKVxuXG4gICAgICAgIGNvbnN0IHRhc2tOYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgyXCIpXG4gICAgICAgIHRhc2tOYW1lLnRleHRDb250ZW50ID0gdGFza3NBcnJheVtudW1QbGFjZW1lbnRdLnRhc2tOYW1lXG5cbiAgICAgICAgY29uc3QgdGFza0Rlc2MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpXG4gICAgICAgIHRhc2tEZXNjLnRleHRDb250ZW50ID0gdGFza3NBcnJheVtudW1QbGFjZW1lbnRdLnRhc2tEZXNjXG5cblxuICAgICAgICAvL0RlbGV0ZSBidXR0b24gd2lsbCBhcHBlYXIgd2hlbiBob3ZlcmluZ1xuICAgICAgICBjb25zdCBkZWxldGVUYXNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKVxuICAgICAgICBkZWxldGVUYXNrLnRleHRDb250ZW50ID0gXCJYXCJcbiAgICAgICAgZGVsZXRlVGFzay5jbGFzc0xpc3QuYWRkKFwiZGVsZXRlXCIpXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgdGFzay5hcHBlbmRDaGlsZChkZWxldGVUYXNrKVxuICAgICAgICB0YXNrLmFwcGVuZENoaWxkKGNoZWNrYm94KVxuICAgICAgICB0YXNrLmFwcGVuZENoaWxkKHRhc2tOYW1lKVxuICAgICAgICB0YXNrLmFwcGVuZENoaWxkKHRhc2tEZXNjKS8vdGVtcG9yYXJ5XG4gICAgICAgIHRhc2tzQXJlYS5hcHBlbmRDaGlsZCh0YXNrKVxuICAgICAgICB2aWV3VGFza3MoKVxuICAgICAgICBcbn1cblxuZnVuY3Rpb24gdmlld1Rhc2tzKCl7Ly8gVmlldyBmdWxsIHRhc2tcbiAgICBjb25zdCB0YXNrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIudGFza1wiKVxuICAgIHRhc2tzLmZvckVhY2godGFzayA9PiB7XG4gICAgICAgIHRhc2suYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGUpPT57Ly9vcGVuIGVkaXQgZGl2XG4gICAgICAgICAgICBpZihlLnRhcmdldC5jbG9zZXN0ID09IFwiLmNoZWNrYm94XCIpe1xuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZihlLnRhcmdldC5jbG9zZXN0ID09IFwiLnRhc2tcIil7XG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgIGxldCB0YXNrUGxhY2UgPSB0YXNrLmdldEF0dHJpYnV0ZShcImRhdGEta2V5XCIpXG4gICAgICAgICAgICAgICAgbGV0IGN1cnJlbnRUYXNrID0gdGFza3NBcnJheVt0YXNrUGxhY2VdXG5cbiAgICAgICAgICAgICAgICBpZihpblZpZXcgPT0gZmFsc2Upe1xuICAgICAgICAgICAgICAgICAgICB0YXNrLmNsYXNzTGlzdC5hZGQoXCJpblZpZXdpbmdcIilcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgZ2F0aGVyVGFza0luZm8oY3VycmVudFRhc2sudGFza05hbWUsIGN1cnJlbnRUYXNrLnRhc2tEZXNjKVxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGluVmlldyA9IHRydWVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGdhdGhlclRhc2tJbmZvKHRhc2tOYW1lLCB0YXNrRGVzYyl7Ly9DcmVhdGVzIGRpdiB0aGF0IHNob3dzIGFsbCBpbmZvXG4gICAgY29uc3QgZnVsbFRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpXG4gICAgICAgICAgICAgICAgICAgICAgICBmdWxsVGFzay5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInZpZXdCb3hcIilcblxuICAgIGNvbnN0IHZpZXdUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMlwiKVxuICAgICAgICB2aWV3VGl0bGUuc2V0QXR0cmlidXRlKFwiaWRcIixcInZpZXdUaXRsZVwiKVxuICAgICAgICB2aWV3VGl0bGUudGV4dENvbnRlbnQgPSB0YXNrTmFtZVxuXG4gICAgY29uc3Qgdmlld0Rlc2MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpXG4gICAgICAgIHZpZXdEZXNjLnNldEF0dHJpYnV0ZShcImlkXCIsXCJ2aWV3RGVzY1wiKVxuICAgICAgICB2aWV3RGVzYy50ZXh0Q29udGVudCA9IHRhc2tEZXNjXG5cbiAgICBmdWxsVGFzay5hcHBlbmRDaGlsZCh2aWV3VGl0bGUpXG4gICAgZnVsbFRhc2suYXBwZW5kQ2hpbGQodmlld0Rlc2MpXG4gICAgY29udGVudC5hcHBlbmRDaGlsZChmdWxsVGFzaylcbn1cblxuXG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChlKT0+eyAvL1JlbW92ZSB2aWV3aW5nXG4gICAgaWYoZS50YXJnZXQuY2xvc2VzdChcIi5pblZpZXdpbmdcIikpe1xuICAgICAgICByZXR1cm5cbiAgICB9XG4gICAgZWxzZSBpZihlLnRhcmdldC5jbG9zZXN0KFwiLnRvRG9Gb3JtXCIpKXtcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGVsc2UgaWYoZS50YXJnZXQuY2xvc2VzdChcIiN2aWV3Qm94XCIpKXtcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGVsc2UgaWYoaW5WaWV3ID09IHRydWUpe1xuICAgICAgICBjb25zdCB2aWV3Qm94ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWV3Qm94XCIpLy9SZW1vdmVzIHZpZXdCb3hcbiAgICAgICAgdmlld0JveC5yZW1vdmUoKVxuICAgICAgICBjb25zdCB0YXNrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIudGFza1wiKS8vUmVtb3ZlcyBpblZpZXdpbmcgY2xhc3NcbiAgICAgICAgdGFza3MuZm9yRWFjaCh0YXNrID0+e1xuICAgICAgICAgICAgaW5WaWV3ID0gZmFsc2VcbiAgICAgICAgICAgIHRhc2suY2xhc3NMaXN0LnJlbW92ZShcImluVmlld2luZ1wiKVxuICAgICAgICB9KVxuICAgIH1cbn0pXG5cbmZ1bmN0aW9uIGNoZWNrbGlzdCgpey8vY2hlY2tsaXN0IGFiaWxpdHlcbiAgICBjb25zdCBjaGVja2JveGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5jaGVja2JveFwiKVxuICAgIGNoZWNrYm94ZXMuZm9yRWFjaChjaGVja2JveD0+e1xuICAgICAgICBjaGVja2JveC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZSk9PntcbiAgICAgICAgICAgIGNoZWNrYm94LmNsYXNzTGlzdC50b2dnbGUoXCJjaGVja2VkXCIpXG4gICAgICAgICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpXG4gICAgICAgIH0pXG4gICAgfSlcbn1cblxuXG5cbmZ1bmN0aW9uIGRlbGV0ZVRhc2tzKCl7Ly9EZWxldGVzIFRhc2tcbiAgICBjb25zdCBkZWxldGVCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5kZWxldGVcIikgICAgICAvL3NlbGVjdHMgZGVsZXRlIGNsYXNzXG4gICAgZGVsZXRlQnV0dG9ucy5mb3JFYWNoKGRCdXR0b249PntcbiAgICAgICAgZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKT0+e1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBsZXQgZm9jdXNlZFRhc2sgPSBkQnV0dG9uLmNsb3Nlc3QoXCIudGFza1wiKSAgICAgICAgXG4gICAgICAgICAgICBsZXQgdGFza1BsYWNlID0gZm9jdXNlZFRhc2suZ2V0QXR0cmlidXRlKFwiZGF0YS1rZXlcIikgICAgXG5cbiAgICAgICAgICAgIHRhc2tzQXJyYXkuc3BsaWNlKHRhc2tQbGFjZSwxKSAgICAgICAgICAgICAgICAgICAgICAgICAgLy9yZW1vdmVzIGZyb20gYXJyYXkgYW5kIGZyb20gRE9NXG4gICAgICAgICAgICBmb2N1c2VkVGFzay5yZW1vdmUoKVxuICAgICAgICB9XG4gICAgKX1cbiAgICApXG59XG5cbmZ1bmN0aW9uIHNob3dEZWxldGUoKXsvL1Nob3dzIGFuZCBIaWRlcyBkZWxldGUgYnV0dG9uXG4gICAgY29uc3QgdGFza3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnRhc2tcIilcbiAgICBjb25zdCBkZWxldGVCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5kZWxldGVcIikgIFxuICAgICAgICB0YXNrcy5mb3JFYWNoKHRhc2s9PntcbiAgICAgICAgICAgIHRhc2suYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlb3ZlclwiLCgpPT57Ly9XaGVuIGhvdmVyaW5nIHRhc2sgZ3JhbnQgdmlzaWJpbGl0eVxuICAgICAgICAgICAgICAgIGRlbGV0ZUJ1dHRvbnMuZm9yRWFjaChkQnV0dG9uPT57XG4gICAgICAgICAgICAgICAgICAgIGRCdXR0b24uc2V0QXR0cmlidXRlKFwiaWRcIixcImRlbGV0ZVZpc2libGVcIilcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIHRhc2suYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlb3V0XCIsKCk9PnsvL1doZW4gbm90IGhvdmVyaW5nIHRhc2sgcmVtb3ZlIHZpc2liaWxpdHlcbiAgICAgICAgICAgICAgICBkZWxldGVCdXR0b25zLmZvckVhY2goZEJ1dHRvbj0+e1xuICAgICAgICAgICAgICAgICAgICBkQnV0dG9uLnJlbW92ZUF0dHJpYnV0ZShcImlkXCIsXCJkZWxldGVWaXNpYmxlXCIpXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG59XG5cbiIsImltcG9ydCBcIi4vc3R5bGUuY3NzXCJcbmltcG9ydCB7dG9Eb0NyZWF0b3IsIHRvRG9Gb3JtQ3JlYXRvciwgdG9Eb0Zvcm1SZW1vdmVyLCB0YXNrc0FycmF5LCBmb3JtQWN0aXZlLCBhZGRUYXNrVG9IdG1sfSBmcm9tIFwiLi90YXNrcy5qc1wiXG5cbmxldCB0YXNrcyA9IFtdXG5cbmNvbnN0IHNpZGViYXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNpZGViYXJcIilcbmNvbnN0IHBhZ2VTZWxlY3RvciA9ICgoKT0+e1xuICAgIGZ1bmN0aW9uIGJ1dHRvblNlbGVjdG9yVmlzdWFscyhidXR0b24pey8vZGVub3RlcyB3aGljaCBzZWN0aW9uIGlzIGNob3NlbiBvbiBzaWRlYmFyXG4gICAgICAgIGNvbnN0IHNpZGViYXJDaGlsZHJlbiA9IHNpZGViYXIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJidXR0b25cIik7XG4gICAgICAgICAgICBmb3IodmFyIGk9MDsgaTxzaWRlYmFyQ2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBzaWRlYmFyQ2hpbGRyZW5baV0uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJcIjtcbiAgICAgICAgICAgICAgICBzaWRlYmFyQ2hpbGRyZW5baV0uY2xhc3NMaXN0LnJlbW92ZShcImNvbnRlbnRUaXRsZUNob3NlblwiKVxuICAgICAgICAgICAgfVxuICAgICAgICBidXR0b24uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2IoMjM2LCAxNTIsIDE1MilcIlxuICAgICAgICBidXR0b24uY2xhc3NMaXN0LmFkZChcImNvbnRlbnRUaXRsZUNob3NlblwiKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHRhYkNoYW5nZSgpey8vRGVub3RlcyBjdXJyZW50IHBhZ2Ugb24gY29udGVudCBhcmVhXG4gICAgICAgIGNvbnN0IGNvbnRlbnRUaXRsZUNob3NlbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29udGVudFRpdGxlQ2hvc2VuXCIpXG4gICAgICAgIGNvbnRlbnRUaXRsZS50ZXh0Q29udGVudCA9IGNvbnRlbnRUaXRsZUNob3Nlbi50ZXh0Q29udGVudFxuICAgIH1cblxuICAgIHJldHVybntcbiAgICAgICAgYnV0dG9uU2VsZWN0b3JWaXN1YWxzLFxuICAgICAgICB0YWJDaGFuZ2VcbiAgICB9XG59KSgpXG5cblxuLy9TaWRlYmFyIGJ1dHRvbnNcbmNvbnN0IHRvZGF5QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50b2RheUJ1dHRvblwiKVxuICAgIHRvZGF5QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57XG4gICAgICAgIHBhZ2VTZWxlY3Rvci5idXR0b25TZWxlY3RvclZpc3VhbHModG9kYXlCdXR0b24pXG4gICAgICAgIHBhZ2VTZWxlY3Rvci50YWJDaGFuZ2UoKVxuICAgIH0pXG4gICAgdG9kYXlCdXR0b24uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2IoMjM2LCAxNTIsIDE1MilcIlxuXG5jb25zdCB1cGNvbWluZ0J1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudXBjb21pbmdCdXR0b25cIilcbiAgICB1cGNvbWluZ0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCk9PntcbiAgICAgICAgcGFnZVNlbGVjdG9yLmJ1dHRvblNlbGVjdG9yVmlzdWFscyh1cGNvbWluZ0J1dHRvbilcbiAgICAgICAgcGFnZVNlbGVjdG9yLnRhYkNoYW5nZSgpXG4gICAgfSlcblxuY29uc3QgYWNjb21wbGlzaGVkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hY2NvbXBsaXNoZWRCdXR0b25cIilcbiAgICBhY2NvbXBsaXNoZWRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpPT57XG4gICAgICAgIHBhZ2VTZWxlY3Rvci5idXR0b25TZWxlY3RvclZpc3VhbHMoYWNjb21wbGlzaGVkQnV0dG9uKVxuICAgICAgICBwYWdlU2VsZWN0b3IudGFiQ2hhbmdlKClcbiAgICB9KSAgICBcblxuY29uc3QgcHJvamVjdHNCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2plY3RzQnV0dG9uXCIpXG4gICAgcHJvamVjdHNCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpPT57XG4gICAgICAgIHBhZ2VTZWxlY3Rvci5idXR0b25TZWxlY3RvclZpc3VhbHMocHJvamVjdHNCdXR0b24pXG4gICAgICAgIHBhZ2VTZWxlY3Rvci50YWJDaGFuZ2UoKVxuICAgIH0pXG5cblxuXG5cbmNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNvbnRlbnRcIilcblxuLy9Tb3J0cyB0YXNrcyBiYXNlZCBvZmYgc2VsZWN0aW9uXG5jb25zdCBjb250ZW50U29ydGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKVxuY29udGVudFNvcnRlci5jbGFzc0xpc3QuYWRkKFwiY29udGVudFNvcnRlclwiKVxuXG4gICAgY29uc3QgcHJpb3JpdHlTb3J0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKVxuICAgIGNvbnN0IHByaW9yaXR5SW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKVxuICAgIHByaW9yaXR5SW1nLnNldEF0dHJpYnV0ZShcInNyY1wiLFwiaHR0cHM6Ly9zZWVraWNvbi5jb20vZnJlZS1pY29uLWRvd25sb2FkL2xpc3Qtc3RhcnNfMS5zdmdcIilcblxuICAgIGNvbnN0IGFscGhhYmV0aWNhbGx5U29ydCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIilcbiAgICBjb25zdCBhbHBoYWJldGljYWxseUltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIilcbiAgICBhbHBoYWJldGljYWxseUltZy5zZXRBdHRyaWJ1dGUoXCJzcmNcIixcImh0dHBzOi8vc2Vla2ljb24uY29tL2ZyZWUtaWNvbi1kb3dubG9hZC9vcmRlcmVkLWxpc3RfMy5zdmdcIilcblxuICAgIGNvbnN0IG9sZGVzdFNvcnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpXG4gICAgY29uc3Qgb2xkZXN0SW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKVxuICAgIG9sZGVzdEltZy5zZXRBdHRyaWJ1dGUoXCJzcmNcIixcImh0dHBzOi8vc3RhdGljLTAwLmljb25kdWNrLmNvbS9hc3NldHMuMDAvc29ydC1jYWxlbmRhci1kZXNjZW5kaW5nLWljb24tNTEyeDQwMi1iZ203Mnlqcy5wbmdcIilcbiAgICAvL2NvbnN0IG9sZGVzdFNvcnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpXG5cbnByaW9yaXR5U29ydC5hcHBlbmRDaGlsZChwcmlvcml0eUltZylcbmFscGhhYmV0aWNhbGx5U29ydC5hcHBlbmRDaGlsZChhbHBoYWJldGljYWxseUltZylcbm9sZGVzdFNvcnQuYXBwZW5kQ2hpbGQob2xkZXN0SW1nKVxuXG5jb250ZW50U29ydGVyLmFwcGVuZENoaWxkKHByaW9yaXR5U29ydClcbmNvbnRlbnRTb3J0ZXIuYXBwZW5kQ2hpbGQoYWxwaGFiZXRpY2FsbHlTb3J0KVxuY29udGVudFNvcnRlci5hcHBlbmRDaGlsZChvbGRlc3RTb3J0KVxuXG5jb25zdCBmb3JtQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKVxuZm9ybUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiK1wiXG5mb3JtQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJmb3JtQnV0dG9uXCIpXG5cbmZvcm1CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKCk9PntcbiAgICBpZihmb3JtQWN0aXZlPT10cnVlKXtcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGVsc2V7XG4gICAgICAgIHRvRG9Gb3JtQ3JlYXRvcigpXG4gICAgICAgICAgICAgICBcbiAgICB9ICAgIFxufSlcblxuXG5cblxuY29udGVudC5hcHBlbmRDaGlsZChmb3JtQnV0dG9uKVxuY29uc3QgY29udGVudFRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jb250ZW50VGl0bGVcIilcbmNvbnRlbnRUaXRsZS50ZXh0Q29udGVudCA9IFwiVG9kYXlcIlxuXG5jb250ZW50LmFwcGVuZENoaWxkKGNvbnRlbnRTb3J0ZXIpXG5cblxuXG5cblxuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsImxvY2FscyIsInRhc2tzQXJyYXkiLCJmb3JtQWN0aXZlIiwiaW5WaWV3IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsb3Nlc3QiLCJnZXRFbGVtZW50QnlJZCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwidGFzayIsImNsYXNzTGlzdCIsInNpZGViYXIiLCJwYWdlU2VsZWN0b3IiLCJidXR0b24iLCJzaWRlYmFyQ2hpbGRyZW4iLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImJhY2tncm91bmRDb2xvciIsImFkZCIsImNvbnRlbnRUaXRsZUNob3NlbiIsImNvbnRlbnRUaXRsZSIsInRleHRDb250ZW50IiwidG9kYXlCdXR0b24iLCJ1cGNvbWluZ0J1dHRvbiIsImFjY29tcGxpc2hlZEJ1dHRvbiIsInByb2plY3RzQnV0dG9uIiwiY29udGVudFNvcnRlciIsInByaW9yaXR5U29ydCIsInByaW9yaXR5SW1nIiwiYWxwaGFiZXRpY2FsbHlTb3J0IiwiYWxwaGFiZXRpY2FsbHlJbWciLCJvbGRlc3RTb3J0Iiwib2xkZXN0SW1nIiwiZm9ybUJ1dHRvbiIsInRvRG9Gb3JtIiwibmFtZURpdiIsInRhc2tOYW1lTGFiZWwiLCJ0YXNrTmFtZUlucHV0IiwiZGVzY0RpdiIsInRhc2tEZXNjTGFiZWwiLCJ0YXNrRGVzY0lucHV0IiwiaGVpZ2h0Iiwic3VibWl0IiwicHJldmVudERlZmF1bHQiLCJ2YWx1ZSIsImJvcmRlciIsInRhc2tOYW1lIiwidGFza0Rlc2MiLCJ0YXNrc0FyZWEiLCJudW1QbGFjZW1lbnQiLCJjaGVja2JveCIsImRlbGV0ZVRhc2siLCJ0YXNrUGxhY2UiLCJnZXRBdHRyaWJ1dGUiLCJjdXJyZW50VGFzayIsImZ1bGxUYXNrIiwidmlld1RpdGxlIiwidmlld0Rlc2MiLCJnYXRoZXJUYXNrSW5mbyIsImFkZFRhc2tUb0h0bWwiLCJ0b2dnbGUiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJkQnV0dG9uIiwiZm9jdXNlZFRhc2siLCJ0YXNrcyIsImRlbGV0ZUJ1dHRvbnMiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzaG93RGVsZXRlIiwicmVxdWlyZU5hbWUiLCJ0b0RvRm9ybUNyZWF0b3IiXSwic291cmNlUm9vdCI6IiJ9